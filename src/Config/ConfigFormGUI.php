<?php

namespace srag\Plugins\AutoDeactivation\Config;

use ilAuthUtils;
use ilCheckboxInputGUI;
use ilMultiSelectInputGUI;
use ilNumberInputGUI;
use ilObjUser;
use srag\Plugins\AutoDeactivation\Utils\AutoDeactivationTrait;
use ilAutoDeactivationConfigGUI;
use ilAutoDeactivationPlugin;
use ilTextInputGUI;
use srag\ActiveRecordConfig\AutoDeactivation\Config\Config;
use srag\CustomInputGUIs\AutoDeactivation\PropertyFormGUI\PropertyFormGUI;

/**
 * Class ConfigFormGUI
 *
 * Generated by SrPluginGenerator v1.3.5
 *
 * @package srag\Plugins\AutoDeactivation\Config
 *
 * @author studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 * @author studer + raimann ag - Team Custom 1 <support@studer-raimann.ch>
 */
class ConfigFormGUI extends PropertyFormGUI
{

    use AutoDeactivationTrait;
    const PLUGIN_CLASS_NAME = ilAutoDeactivationPlugin::class;
    const KEY_LOCAL_USERS_ONLY = "local_users_only";
    const KEY_THRESHOLD_IN_DAYS = "threshold_in_days";
    const KEY_DAYS_WARNING = "days_warning";
    const KEY_NOTIFICATION_EMAILS = "notification_emails";
    const LANG_MODULE = ilAutoDeactivationConfigGUI::LANG_MODULE;


    /**
     * ConfigFormGUI constructor
     *
     * @param ilAutoDeactivationConfigGUI $parent
     */
    public function __construct(ilAutoDeactivationConfigGUI $parent)
    {
        parent::__construct($parent);
    }


    /**
     * @inheritDoc
     */
    protected function getValue(/*string*/ $key)
    {
        switch ($key) {
            default:
                return self::autoDeactivation()->config()->getValue($key);
        }
    }


    /**
     * @inheritDoc
     */
    protected function initCommands(): void
    {
        $this->addCommandButton(ilAutoDeactivationConfigGUI::CMD_UPDATE_CONFIGURE, $this->txt("save"));
    }


    /**
     * @inheritDoc
     */
    protected function initFields(): void
    {
        $this->fields = [
            self::KEY_LOCAL_USERS_ONLY => [
                self::PROPERTY_CLASS    => ilCheckboxInputGUI::class,
                self::PROPERTY_REQUIRED => false
            ],
            self::KEY_THRESHOLD_IN_DAYS => [
                self::PROPERTY_CLASS    => ilNumberInputGUI::class,
                self::PROPERTY_REQUIRED => true
            ],
            self::KEY_DAYS_WARNING => [
                self::PROPERTY_CLASS    => ilNumberInputGUI::class,
                self::PROPERTY_REQUIRED => true
            ],
            self::KEY_NOTIFICATION_EMAILS => [
                self::PROPERTY_CLASS    => ilTextInputGUI::class,
                self::PROPERTY_REQUIRED => false
            ]
        ];
    }


    /**
     * @inheritDoc
     */
    protected function initId(): void
    {

    }


    /**
     * @inheritDoc
     */
    protected function initTitle(): void
    {
        $this->setTitle($this->txt("configuration"));
    }


    /**
     * @inheritDoc
     */
    protected function storeValue(/*string*/ $key, $value): void
    {
        switch ($key) {
            default:
                self::autoDeactivation()->config()->setValue($key, $value);
                break;
        }
    }
}
